admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9902 }

static_resources:
  listeners:
  - name: k8s_8080
    address:
      socket_address: { address: "REPLACE_WITH_IP", port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: k8s_8080 }
          http_filters:
          - name: envoy.router
          access_log:
            name: envoy.file_access_log
            filter:
              not_health_check_filter: {}
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              path: /var/log/envoy-8080.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                response_code: "%RESPONSE_CODE%"
                duration: "%DURATION%"
                source: "%DOWNSTREAM_REMOTE_ADDRESS%"
                user_agent: "%REQ(USER-AGENT)%"
  - name: k8s_443
    address:
      socket_address: { address: "REPLACE_WITH_IP", port_value: 443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: k8s_8443 }
          http_filters:
          - name: envoy.router
          access_log:
            name: envoy.file_access_log
            filter:
              not_health_check_filter: {}
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              path: /var/log/envoy-443.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                response_code: "%RESPONSE_CODE%"
                duration: "%DURATION%"
                source: "%DOWNSTREAM_REMOTE_ADDRESS%"
                user_agent: "%REQ(USER-AGENT)%"
  - name: k8s_6443
    address:
      socket_address: { address: "REPLACE_WITH_IP", port_value: 6443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: k8s_8443 }
          http_filters:
          - name: envoy.router
          access_log:
            name: envoy.file_access_log
            filter:
              not_health_check_filter: {}
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              path: /var/log/envoy-6443.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                response_code: "%RESPONSE_CODE%"
                duration: "%DURATION%"
                source: "%DOWNSTREAM_REMOTE_ADDRESS%"
                user_agent: "%REQ(USER-AGENT)%"
  - name: k8s_8443
    address:
      socket_address: { address: "REPLACE_WITH_IP", port_value: 8443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: k8s_8443 }
          http_filters:
          - name: envoy.router
          access_log:
            name: envoy.file_access_log
            filter:
              not_health_check_filter: {}
            typed_config:
              "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
              path: /var/log/envoy-8443.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                response_code: "%RESPONSE_CODE%"
                duration: "%DURATION%"
                source: "%DOWNSTREAM_REMOTE_ADDRESS%"
                user_agent: "%REQ(USER-AGENT)%"
  clusters:
  - name: k8s_8080
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: k8s_8080
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8080
  - name: k8s_8443
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: k8s_8443
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
